local UI = {}

local DefaultTheme = {
    gameNameTheme = Color3.fromRGB(170, 0, 255),
    buttonColor = Color3.fromRGB(170, 0, 255)
}
local Objects = {}
local Themes = {
    Orange = {
        gameNameTheme = Color3.fromRGB(170, 0, 255),
        buttonColor = Color3.fromRGB(170, 0, 255)
    },
    Blue = {
        gameNameTheme = Color3.fromRGB(0, 110, 255),
        buttonColor = Color3.fromRGB(0, 110, 255)
    },
    Green = {
        gameNameTheme = Color3.fromRGB(45, 255, 0),
        buttonColor = Color3.fromRGB(45, 255, 0)
    },
    Pink = {
        gameNameTheme = Color3.fromRGB(255, 0, 243),
        buttonColor = Color3.fromRGB(255, 0, 243)
    },
    Purple = {
        gameNameTheme = Color3.fromRGB(170, 20, 255),
        buttonColor = Color3.fromRGB(170, 20, 255)
    },
    Teal = {
        gameNameTheme = Color3.fromRGB(0, 251, 255),
        buttonColor = Color3.fromRGB(0, 251, 255)
    },
    Red = {
        gameNameTheme = Color3.fromRGB(255, 0, 0),
        buttonColor = Color3.fromRGB(255, 0, 0)
    },
    Yellow = {
        gameNameTheme = Color3.fromRGB(255, 255, 0),
        buttonColor = Color3.fromRGB(255, 255, 0)
    },
}
local function ApplyFrameResizingLib(scrollingframe)
	local calc = scrollingframe:FindFirstChild("UIGridLayout") or scrollingframe:FindFirstChild("UIListLayout") or nil;
	local function update()
		pcall(function()
			local cS = calc.AbsoluteContentSize
			scrollingframe.CanvasSize = UDim2.new(0,scrollingframe.Size.X,0,cS.Y + 30)
		end)
	end
	calc.Changed:Connect(update)
	update()
end
function UI:Main(uiName, keyBind, themeName)
    if not themeList then
        themeList = DefaultTheme
    end
	themeList = themeName and Themes[themeName] or Themes.Blue
    local AcentHubOrange = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local RightLine = Instance.new("Frame")
    local Logo = Instance.new("TextLabel")
    local TabsFrame = Instance.new("Frame")
    local MainTabsFrame = Instance.new("Frame")
    local UIGridLayout = Instance.new("UIGridLayout")
    local allPages = Instance.new("Folder")
    local Hider = Instance.new("Frame")
    local input = game:GetService("UserInputService")
    
    uiName = uiName or "Acent Hub"
    keyBind = keyBind or "RightControl"

    AcentHubOrange.Name = "Acent Hub"
    AcentHubOrange.Parent = game.CoreGui
    AcentHubOrange.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = AcentHubOrange
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.Position = UDim2.new(0.285144567, 0, 0.236084446, 0)
    MainFrame.Size = UDim2.new(0, 431, 0, 274)
    
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = MainFrame
    
    TabsFrame.Name = "TabsFrame"
    TabsFrame.Parent = MainFrame
    TabsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabsFrame.BackgroundTransparency = 1.000
    TabsFrame.Position = UDim2.new(0, 0, 0.284671545, 0)
    TabsFrame.Size = UDim2.new(0, 131, 0, 196)
    
    Logo.Name = "Logo"
    Logo.Parent = MainFrame
    Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Logo.BackgroundTransparency = 1.000
    Logo.Position = UDim2.new(0, 0, 0.0328467153, 0)
    Logo.Size = UDim2.new(0, 131, 0, 69)
    Logo.Font = Enum.Font.SourceSansBold
    Logo.Text = ""..uiName
    Logo.TextColor3 = Color3.fromRGB(255, 255, 255)
    Logo.TextSize = 20.000

    function UI:DraggingEnabled(frame, parent)
		parent = parent or frame

		local dragging = false
		local dragInput, mousePos, framePos

		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				mousePos = input.Position
				framePos = parent.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		frame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		input.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				local delta = input.Position - mousePos
				parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
			end
		end)
	end
    
    
    MainTabsFrame.Name = "MainTabsFrame"
    MainTabsFrame.Parent = TabsFrame
    MainTabsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MainTabsFrame.BackgroundTransparency = 1.000
    MainTabsFrame.Position = UDim2.new(0, 0, -0.0102040814, 0)
    MainTabsFrame.Size = UDim2.new(0, 131, 0, 198)
    
    UIGridLayout.Parent = MainTabsFrame
    UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout.CellSize = UDim2.new(0, 131, 0, 32)
    
    RightLine.Name = "RightLine"
    RightLine.Parent = MainFrame
    RightLine.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
    RightLine.BorderSizePixel = 0
    RightLine.Position = UDim2.new(0.303944319, 0, 0, 0)
    RightLine.Size = UDim2.new(0, 1, 0, 274)

    Hider.Name = "Hider"
    Hider.Parent = MainFrame
    Hider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Hider.BorderSizePixel = 0
    Hider.Size = UDim2.new(0, 431, 0, 1)
    Hider.Visible = false

    allPages.Name = "allPages"
    allPages.Parent = MainFrame

    UI:DraggingEnabled(TabsFrame, MainFrame)


    local Visible = true
 
    input.InputBegan:Connect(function(input, gameProcessedEvent)
        if not gameProcessedEvent then
            if input.KeyCode == Enum.KeyCode[keyBind] then
                if Visible then
                    Visible = false
                    Hider.Visible = true
                    RightLine.Visible = false
                    game.TweenService:Create(Hider, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 405, 0, 265)
                    }):Play()
                    wait(.2)
                    for i, v in pairs(MainFrame:GetChildren()) do
                        if not v:IsA("UICorner") and not v:IsA("Folder") then
                            v.Visible = false
                        end
                        for i, v in pairs(allPages:GetChildren()) do
                            v.Visible = false
                        end
                    end
                    Hider.Visible = false
                    game.TweenService:Create(MainFrame, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0,0,0,0)
                    }):Play()
                    wait(.2)
                    MainFrame.Visible = false
                else
                    MainFrame.Visible = true
                    game.TweenService:Create(MainFrame, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 411, 0, 275)
                    }):Play()
                    wait(.2)
                    Hider.Visible = true
                    for i, v in pairs(MainFrame:GetChildren()) do
                        if not v:IsA("UICorner") and not v:IsA("Folder") then
                            v.Visible = true
                        end
                        for i, v in pairs(allPages:GetChildren()) do
                            v.Visible = true
                        end
                    end
                    game.TweenService:Create(Hider, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 405, 0, 0)
                    }):Play()
                    Hider.Visible = false
                    RightLine.Visible = true
                    Visible = true
                end
            end
        end
    end)

    local Tabs = {}

    local FirstTab = true

    function Tabs:Tab(tabName)
        local TabButton = Instance.new("TextButton")
        local Page = Instance.new("ScrollingFrame")
        local Selected = Instance.new("Frame")
        local UIListLayout = Instance.new("UIListLayout")

        tabName = tabName or "Tab"

        TabButton.Name = "TabButton"
        TabButton.Parent = MainTabsFrame
        TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.BackgroundTransparency = 1.000
        TabButton.Position = UDim2.new(0, 0, 0.0867346972, 0)
        TabButton.Size = UDim2.new(0, 131, 0, 32)
        TabButton.Font = Enum.Font.SourceSans
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.fromRGB(100, 100, 100)
        TabButton.TextSize = 18.000
		Objects[TabButton] = "BackgroundColor3"

        Page.Name = "Page"
        Page.Parent = allPages
        Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Page.BackgroundTransparency = 1.000
        Page.BorderSizePixel = 0
        Page.Position = UDim2.new(0.324825972, 0, 0.0328467153, 0)
        Page.Selectable = false
        Page.Size = UDim2.new(0, 285, 0, 258)
        Page.ScrollBarThickness = 4
        
        UIListLayout.Parent = Page
        UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)

        Selected.Name = "Selected"
        Selected.Parent = TabButton
        Selected.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
        Selected.BorderSizePixel = 0
        Selected.Position = UDim2.new(0.053435117, 0, 0.09375, 0)
        Selected.Size = UDim2.new(0, 2, 0, 25)

        ApplyFrameResizingLib(Page)

        if FirstTab then
            Page.Visible = true
            Selected.Visible = true
            FirstTab = false
        else
            Page.Visible = false
            Selected.Visible = false
        end
 
        TabButton.MouseButton1Click:Connect(function()
            for i, v in pairs(allPages:GetChildren()) do
                v.Visible = false
            end
            Page.Visible = true
            for i, v in pairs(MainTabsFrame:GetChildren()) do
                if not v:IsA("UIGridLayout") then
                    v.BackgroundColor3 = Color3.fromRGB(35,35,35)
                end
            end
            game.TweenService:Create(TabButton, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                BackgroundColor3 = themeList.buttonColor
            }):Play()
        end)

        local Section = {}

        function Section:Section()
            local Elements = {}

            function  Elements:Toggle(toggleName, callback)
                local Toggle = Instance.new("TextButton")
                local ToggleUICorner_2 = Instance.new("UICorner")
                local ToggleUICorner_3 = Instance.new("UICorner")
                local ToggleBorder = Instance.new("TextButton")
                local MainToggle = Instance.new("TextButton")
                local done = Instance.new("ImageLabel")

                callback = callback or function() end
                toggleName = toggleName or "Toggle"

                Toggle.Name = "Toggle"
                Toggle.Parent = Page
                Toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                Toggle.BorderSizePixel = 0
                Toggle.Position = UDim2.new(-0.0754386038, 0, 0.0804597735, 0)
                Toggle.Size = UDim2.new(0, 270, 0, 31)
                Toggle.Font = Enum.Font.SourceSans
                Toggle.Text = "   "..toggleName
                Toggle.TextColor3 = Color3.fromRGB(170, 0, 255)
                Toggle.TextSize = 17.000
                Toggle.TextXAlignment = Enum.TextXAlignment.Left
                
                UICorner.CornerRadius = UDim.new(0, 4)
                UICorner.Parent = Toggle
                
                ToggleBorder.Name = "ToggleBorder"
                ToggleBorder.Parent = Toggle
                ToggleBorder.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
                ToggleBorder.Position = UDim2.new(0.885185182, 0, 0.161290318, 0)
                ToggleBorder.Size = UDim2.new(0, 20, 0, 20)
                ToggleBorder.Font = Enum.Font.SourceSans
                ToggleBorder.Text = ""
                ToggleBorder.TextColor3 = Color3.fromRGB(0, 0, 0)
                ToggleBorder.TextSize = 14.000

                ToggleUICorner_2.CornerRadius = UDim.new(0, 3)
                ToggleUICorner_2.Parent = ToggleBorder

                MainToggle.Name = "MainToggle"
                MainToggle.Parent = ToggleBorder
                MainToggle.AnchorPoint = Vector2.new(0.5, 0.5)
                MainToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                MainToggle.Position = UDim2.new(0.5, 0, 0.5, 0)
                MainToggle.Size = UDim2.new(0, 18, 0, 18)
                MainToggle.Font = Enum.Font.SourceSans
                MainToggle.Text = ""
                MainToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
                MainToggle.TextSize = 14.000

                ToggleUICorner_3.CornerRadius = UDim.new(0, 3)
                ToggleUICorner_3.Parent = MainToggle

				local Toggled = false
                MainToggle.MouseButton1Click:Connect(function()
					Toggled = not Toggled
					Objects[MainToggle] = Toggled
					pcall(callback, Toggled)
                    if Toggled then
                        game.TweenService:Create(MainToggle, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = themeList.buttonColor
                        }):Play()
                        done.Visible = true
                        game.TweenService:Create(done, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            Size = UDim2.new(0, 18,0, 18),
                            Position = UDim2.new(0.5, 0,0.5, 0)
                        }):Play()
                    else
                        game.TweenService:Create(MainToggle, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                        }):Play()
                        game.TweenService:Create(done, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            Size = UDim2.new(0, 0, 0, 0)
                        }):Play()
                        wait(.2)
                        done.Visible = false
                    end
                    return Toggled
                end)
                
                done.Name = "done"
                done.AnchorPoint = Vector2.new(.5,.5)
                done.Position = UDim2.new(.5,0,.5,0)
                done.Parent = MainToggle
                done.BackgroundTransparency = 1.000
                done.LayoutOrder = 4
                done.Size = UDim2.new(0, 19, 0, 19)
                done.ZIndex = 2
                done.Image = "rbxassetid://3926305904"
                done.ImageRectOffset = Vector2.new(644, 204)
                done.ImageRectSize = Vector2.new(36, 36)
                done.Visible = false
            end

            function Elements:DropDown(dropdownName, listOfElements, callback)
                local DropDown = Instance.new("Frame")
                local UICorner_12 = Instance.new("UICorner")
                local ToggleText_2 = Instance.new("TextLabel")
                local Open = Instance.new("ImageButton")
                local Close = Instance.new("ImageButton")
                local DropDownFrame = Instance.new("Frame")
                local UIListLayout_2 = Instance.new("UIListLayout")

                callback = callback or function() end
                listOfElements = listOfElements or {}
                dropdownName = dropdownName or "Drop Down"

                DropDown.Name = "DropDown"
                DropDown.Parent = Page
                DropDown.Active = true
                DropDown.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                DropDown.BorderSizePixel = 0
                DropDown.Position = UDim2.new(0.0263157897, 0, 0.263565898, 0)
                DropDown.Selectable = true
                DropDown.Size = UDim2.new(0, 270, 0, 123)
                
                UICorner_12.CornerRadius = UDim.new(0, 4)
                UICorner_12.Parent = DropDown
                
                ToggleText_2.Name = "ToggleText_2"
                ToggleText_2.Parent = DropDown
                ToggleText_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ToggleText_2.BackgroundTransparency = 1.000
                ToggleText_2.Position = UDim2.new(0.0222222228, 0, 0.0579710156, 0)
                ToggleText_2.Size = UDim2.new(0, 86, 0, 28)
                ToggleText_2.Font = Enum.Font.SourceSans
                ToggleText_2.Text = dropdownName
                ToggleText_2.TextColor3 = Color3.fromRGB(170, 0, 255)
                ToggleText_2.TextSize = 17.000
                ToggleText_2.TextXAlignment = Enum.TextXAlignment.Left
                ToggleText_2.TextYAlignment = Enum.TextYAlignment.Top

                local count = 0
                for i, v in pairs(listOfElements) do
                    count = count + 1
                end

                Open.Name = "Open"
                Open.Parent = DropDown
                Open.BackgroundTransparency = 1.000
                Open.Position = UDim2.new(0.888888896, 0, 0.00840336177, 0)
                Open.Size = UDim2.new(0, 30, 0, 28)
                Open.Visible = false
                Open.ZIndex = 2
                Open.Image = "rbxassetid://3926307971"
                Open.ImageColor3 = Color3.fromRGB(170, 0, 255)
                Open.ImageRectOffset = Vector2.new(324, 524)
                Open.ImageRectSize = Vector2.new(36, 36)                
                Open.MouseButton1Click:Connect(function()
                    local SizeToAdd = 20 * count + 30
                    if count > 5 then
                        for i = 1, count, 1 do
                            SizeToAdd = SizeToAdd + 1
                        end
                    end
                    local DesiredSize = 30 + SizeToAdd
                    game.TweenService:Create(DropDown, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 240, 0, DesiredSize)
                    }):Play()
                    Open.Visible = false
                    Close.Visible = true
                    wait(.2)
                    for i, v in pairs(DropDownFrame:GetChildren()) do
                        if v:IsA("TextButton") then
                            v.Visible = true
                            game.TweenService:Create(v, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                                BackgroundTransparency = 0,
                                TextTransparency = 0
                            }):Play()
                        end
                    end
                end)

                Close.Name = "Close"
                Close.Parent = DropDown
                Close.BackgroundTransparency = 1.000
                Close.Position = UDim2.new(0.888888896, 0, 0.00840336177, 0)
                Close.Size = UDim2.new(0, 30, 0, 28)
                Close.ZIndex = 2
                Close.Image = "rbxassetid://3926307971"
                Close.ImageColor3 = Color3.fromRGB(170, 0, 255)
                Close.ImageRectOffset = Vector2.new(164, 484)
                Close.ImageRectSize = Vector2.new(36, 36)
                Close.MouseButton1Click:Connect(function()
                    for i, v in pairs(DropDownFrame:GetChildren()) do
                        if v:IsA("TextButton") then
                            game.TweenService:Create(v, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                                BackgroundTransparency = 1,
                                TextTransparency = 1
                            }):Play()
                        end
                    end
                    wait(.2)
                    for i, v in pairs(DropDownFrame:GetChildren()) do
                        if v:IsA("TextButton") then
                            v.Visible = false
                        end
                    end
                    game.TweenService:Create(DropDown, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                        Size = UDim2.new(0, 240, 0, 30)
                    }):Play()
                    Open.Visible = true
                    Close.Visible = false
                end)

                DropDownFrame.Name = "DropDownFrame"
                DropDownFrame.Parent = DropDown
                DropDownFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropDownFrame.BackgroundTransparency = 1.000
                DropDownFrame.Position = UDim2.new(0, 0, 0.319327742, 0)
                DropDownFrame.Size = UDim2.new(0, 270, 0, 75)
                
                UIListLayout_2.Name = "UIListLayout_2"
                UIListLayout_2.Parent = DropDownFrame
                UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
                UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
                UIListLayout_2.Padding = UDim.new(0, 4)
                
                for i = 1, count, 1 do
                    local TextButton_2 = Instance.new("TextButton")
                    local UICorner_13 = Instance.new("UICorner")
                    local id = Instance.new("StringValue")

                    TextButton_2.Parent = DropDownFrame
					TextButton_2.Name = listOfElements[i]
                    id.Name = "ID"
                    id.Parent = TextButton_2
                    id.Value = listOfElements[i] 
                    TextButton_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    TextButton_2.Position = UDim2.new(0.5, 0, 0, 0)
                    TextButton_2.Size = UDim2.new(0, 249, 0, 23)
                    TextButton_2.Font = Enum.Font.SourceSans
                    TextButton_2.TextColor3 = Color3.fromRGB(170, 0, 255)
                    TextButton_2.TextSize = 17.000
                    TextButton_2.Visible = false
                    TextButton_2.Text = listOfElements[i]
                    TextButton_2.MouseButton1Click:Connect(function()
						if not Objects[TextButton_2.Name] then
							Objects[TextButton_2] = false
						end
						for I,V in pairs(Objects) do
							if type(V) == "boolean" then
								V = false
							end
						end
						Objects[TextButton_2] = true
						ChosenDropDown = TextButton_2.ID.Value
						pcall(callback, ChosenDropDown)

                        for i, v in pairs(DropDownFrame:GetChildren()) do
                            if v:IsA("TextButton")then
                                v.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                            end
                        end

                        game.TweenService:Create(TextButton_2, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = themeList.buttonColor
                        }):Play()

                        for i, v in pairs(DropDownFrame:GetChildren()) do
                            if v:IsA("TextButton") then
                                game.TweenService:Create(v, TweenInfo.new(.4, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                                    BackgroundTransparency = 1,
                                    TextTransparency = 1
                                }):Play()
                            end
                        end	
                        wait(.4)
                        for i, v in pairs(DropDownFrame:GetChildren()) do
                            if v:IsA("TextButton") then
                                v.Visible = false
                            end
                        end	
                        game.TweenService:Create(DropDown, TweenInfo.new(.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            Size = UDim2.new(0, 270,0, 31)
                        }):Play()

                        Open.Visible = true
                        Close.Visible = false
                    end)
                    UICorner_13.CornerRadius = UDim.new(0, 3)
                    UICorner_13.Parent = TextButton_2
                end
                return ChosenDropDown
                
                
            end

            function Elements:Slider(maxvalue, minvalue, sliderName, callback)
                local Slider = Instance.new("Frame")
                local UICorner_9 = Instance.new("UICorner")
                local SliderText = Instance.new("TextLabel")
                local SliderBackground = Instance.new("TextButton")
                local UICorner_10 = Instance.new("UICorner")
                local MainSlider = Instance.new("Frame")
                local UICorner_11 = Instance.new("UICorner")
                local A = Instance.new("TextLabel")

                callback = callback or function() end
                sliderName = sliderName or "Slider"
                Slider.Name = "Slider"
                Slider.Parent = Page
                Slider.Active = true
                Slider.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                Slider.BorderSizePixel = 0
                Slider.Position = UDim2.new(0.00877192989, 0, 0.275862068, 0)
                Slider.Selectable = true
                Slider.Size = UDim2.new(0, 270, 0, 69)
                
                UICorner_9.CornerRadius = UDim.new(0, 4)
                UICorner_9.Parent = Slider
                
                SliderText.Name = "SliderText"
                SliderText.Parent = Slider
                SliderText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderText.BackgroundTransparency = 1.000
                SliderText.Position = UDim2.new(0.0222222228, 0, 0.0579710156, 0)
                SliderText.Size = UDim2.new(0, 86, 0, 28)
                SliderText.Font = Enum.Font.SourceSans
                SliderText.Text = ""..sliderName
                SliderText.TextColor3 = Color3.fromRGB(170, 0, 255)
                SliderText.TextSize = 17.000
                SliderText.TextXAlignment = Enum.TextXAlignment.Left
                
                SliderBackground.Name = "SliderBackground"
                SliderBackground.Parent = Slider
                SliderBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                SliderBackground.Position = UDim2.new(0.0481481478, 0, 0.609415829, 0)
                SliderBackground.Size = UDim2.new(0, 244, 0, 15)
                SliderBackground.Font = Enum.Font.SourceSans
                SliderBackground.Text = ""
                SliderBackground.TextColor3 = Color3.fromRGB(0, 0, 0)
                SliderBackground.TextSize = 14.000
                
                UICorner_10.CornerRadius = UDim.new(0, 3)
                UICorner_10.Parent = SliderBackground
                
                MainSlider.Name = "MainSlider"
                MainSlider.Parent = Slider
                MainSlider.Active = true
                MainSlider.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
                MainSlider.Position = UDim2.new(0.0481481478, 0, 0.609415889, 0)
                MainSlider.Selectable = true
                MainSlider.Size = UDim2.new(0, 120, 0, 15)
				Objects[MainSlider] = "BackgroundColor3"
                
                UICorner_11.CornerRadius = UDim.new(0, 3)
                UICorner_11.Parent = MainSlider
                
                local max = SliderBackground
                local bar = MainSlider
                local player = game:GetService("Players").LocalPlayer
                local mouse = player:GetMouse()
                local uis = game:GetService("UserInputService")
                local val = A
                A.Name = "Value"
                A.Parent = Slider
                A.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                A.BackgroundTransparency = 1.000
                A.Position = UDim2.new(0.640740752, 0, 0.0579710156, 0)
                A.Size = UDim2.new(0, 86, 0, 28)
                A.Font = Enum.Font.SourceSans
                A.Text = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 222) * bar.AbsoluteSize.X) + tonumber(minvalue)) or 0
                A.TextColor3 = Color3.fromRGB(170, 0, 255)
                A.TextSize = 17.000
                A.TextXAlignment = Enum.TextXAlignment.Right
                
                maxvalue = maxvalue or 100
                minvalue = minvalue or 0
                callback = callback or function() end
                max.MouseButton1Down:Connect(function()
                    Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 222) * bar.AbsoluteSize.X) + tonumber(minvalue)) or 0
					pcall(callback, Value)
                    bar:TweenSize(UDim2.new(0, math.clamp(mouse.X - bar.AbsolutePosition.X, 0, 222), 0, 9), "InOut", "Linear", 0.05, true)
                    runconnection = game:GetService("RunService").Heartbeat:Connect(function()
                        val.Text = Value
                        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 222) * bar.AbsoluteSize.X) + tonumber(minvalue))
						pcall(callback, Value)
                        bar:TweenSize(UDim2.new(0, math.clamp(mouse.X - bar.AbsolutePosition.X, 0, 222), 0, 9), "InOut", "Linear", 0.05, true)
                    end)
                    releaseconnection = uis.InputEnded:Connect(function(Mouse)
                        if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                            Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 222) * bar.AbsoluteSize.X) + tonumber(minvalue))
							pcall(callback, Value)
                            val.Text = Value
                            bar:TweenSize(UDim2.new(0, math.clamp(mouse.X - bar.AbsolutePosition.X, 0, 222), 0, 9), "InOut", "Linear", 0.05, true)
                            runconnection:Disconnect()
                            releaseconnection:Disconnect()
                        end
                    end)
                end)
                return Value
            end

            function Elements:Label(labelText)
                local TextLabel = Instance.new("TextLabel")
                local UICorner_17 = Instance.new("UICorner")

                labelText = labelText or "Label"

                TextLabel.Name = "Label"
                TextLabel.Parent = Page
                TextLabel.Active = true
                TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                TextLabel.BorderSizePixel = 0
                TextLabel.Position = UDim2.new(0.00877192989, 0, 0, 0)
                TextLabel.Selectable = true
                TextLabel.Size = UDim2.new(0, 270, 0, 31)
                TextLabel.Font = Enum.Font.SourceSans
                TextLabel.Text = ""..labelText
                TextLabel.TextColor3 = Color3.fromRGB(170, 0, 255)
                TextLabel.TextSize = 17.000
                
                UICorner_17.CornerRadius = UDim.new(0, 4)
                UICorner_17.Parent = TextLabel
            end

            function Elements:KeyBind(keybindName, lastKeyBind, callback)
                local KeyBind = Instance.new("TextButton")
                local UICorner_15 = Instance.new("UICorner")
                local KeyBind_2 = Instance.new("TextButton")
                local UICorner_16 = Instance.new("UICorner")

                keybindName = keybindName or "Key bind"
                local oldKey = lastKeyBind
                local updatingKeybind = false
                local FirstKeyCode = true
                callback = callback or function () end

                KeyBind.Name = "KeyBind"
                KeyBind.Parent = Page
                KeyBind.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                KeyBind.BorderSizePixel = 0
                KeyBind.Position = UDim2.new(-0.0754386038, 0, 0.0804597735, 0)
                KeyBind.Size = UDim2.new(0, 270, 0, 31)
                KeyBind.Font = Enum.Font.SourceSans
                KeyBind.Text = "   "..keybindName
                KeyBind.TextColor3 = Color3.fromRGB(170, 0, 255)
                KeyBind.TextSize = 17.000
                KeyBind.TextXAlignment = Enum.TextXAlignment.Left
                
                UICorner_15.CornerRadius = UDim.new(0, 4)
                UICorner_15.Parent = KeyBind
                
                KeyBind_2.Name = "KeyBind_2"
                KeyBind_2.Parent = KeyBind
                KeyBind_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                KeyBind_2.BorderSizePixel = 0
                KeyBind_2.Position = UDim2.new(0.792592585, 0, 0.0967741907, 0)
                KeyBind_2.Size = UDim2.new(0, 45, 0, 24)
                KeyBind_2.Font = Enum.Font.SourceSans
                KeyBind_2.Text = ""..oldKey
                KeyBind_2.TextColor3 = Color3.fromRGB(170, 0, 255)
                KeyBind_2.TextSize = 14.000
                KeyBind_2.MouseButton1Click:Connect(function(e)
                    FirstKeyCode = false
                    updatingKeybind = true
                    KeyBind_2.Text = "..."
                    local a, b = game:GetService('UserInputService').InputBegan:Wait();
                    KeyBind_2.Text = a.KeyCode.Name ~= "Unknown" and a.KeyCode.Name or a.UserInputType.Name
                    oldKey = a.KeyCode;
                    wait(0.1)
                    updatingKeybind = false
                end)
				Objects[KeyBind_2] = "TextColor3"
                
                input.InputBegan:Connect(function(input, gameProcessedEvent)
                    if not gameProcessedEvent then
                        if FirstKeyCode then
                            if input.KeyCode == Enum.KeyCode[oldKey] then
                                pcall(callback, input.KeyCode)
                            end
                        end
                    end
                end)
                
                game:GetService("UserInputService").InputBegan:Connect(function(current, ok) 
                    if not ok and not updatingKeybind then 
                        if current.KeyCode == oldKey then
                            pcall(callback, current.KeyCode)
                        end
                    end
                    return oldKey
                end)

                UICorner_16.CornerRadius = UDim.new(0, 4)
                UICorner_16.Parent = KeyBind_2
            end

            function Elements:TextBox(textboxName, textboxPlaceHolder, callback)
                local TextBox = Instance.new("Frame")
                local UICorner_19 = Instance.new("UICorner")
                local TextInput = Instance.new("TextBox")
                local UICorner_20 = Instance.new("UICorner")

                callback = callback or function () end
                textboxName = textboxName or "Text box"
                textboxPlaceHolder = textboxPlaceHolder or "Type!"

                TextBox.Name = "TextBox"
                TextBox.Parent = game.StarterGui.AcentHubOrange.MainFrame.Page
                TextBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                TextBox.BorderSizePixel = 0
                TextBox.Position = UDim2.new(-0.0754386038, 0, 0.0804597735, 0)
                TextBox.Size = UDim2.new(0, 270, 0, 31)
                TextBox.Font = Enum.Font.SourceSans
                TextBox.Text = "   "..textboxName
                TextBox.TextColor3 = Color3.fromRGB(170, 0, 255)
                TextBox.TextSize = 17.000
                TextBox.TextXAlignment = Enum.TextXAlignment.Left
                
                UICorner_19.CornerRadius = UDim.new(0, 4)
                UICorner_19.Parent = TextBox
                
                TextInput.Name = "TextInput"
                TextInput.Parent = TextBox
                TextInput.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                TextInput.BorderSizePixel = 0
                TextInput.Position = UDim2.new(0.725925922, 0, 0.0967741907, 0)
                TextInput.Size = UDim2.new(0, 63, 0, 24)
                TextInput.Font = Enum.Font.SourceSans
                TextInput.PlaceholderColor3 = Color3.fromRGB(170, 0, 255)
                TextInput.PlaceholderText = ""..textboxPlaceHolder
                TextInput.Text = ""
                TextInput.TextColor3 = Color3.fromRGB(201, 24, 101)
                TextInput.TextSize = 14.000
                TextInput.TextStrokeColor3 = Color3.fromRGB(201, 24, 101)
                TextInput.FocusLost:Connect(function()
                    text = TextInput.Text
                    pcall(callback, TextInput.Text)
                end)
				Objects[TextInput] = "TextColor3"

                UICorner_20.CornerRadius = UDim.new(0, 4)
                UICorner_20.Parent = TextInput
                return text
            end

            function Elements:Button(buttonName, callback)
                local TextButton = Instance.new("TextButton")
                local UICorner_6 = Instance.new("UICorner")

                callback = callback or function() end
                buttonName = buttonName or "Button"

                TextButton.Name = "Button"
                TextButton.Parent = Page
                TextButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                TextButton.BorderSizePixel = 0
                TextButton.Position = UDim2.new(0.00877192989, 0, 0, 0)
                TextButton.Size = UDim2.new(0, 270, 0, 31)
                TextButton.Font = Enum.Font.SourceSans
                TextButton.TextColor3 = Color3.fromRGB(170, 0, 255)
                TextButton.TextSize = 17.000
                TextButton.Text = ""..buttonName
                TextButton.MouseButton1Click:Connect(function()
                    pcall(callback)
                end)

                UICorner_6.CornerRadius = UDim.new(0, 4)
                UICorner_6.Parent = TextButton
            end

			function Elements:ThemeChanger()
				local ThemeNames = {}
				for I,V in pairs(Themes) do
					table.insert(ThemeNames, tostring(I))
				end
				Elements:DropDown(
					"Themes",
					ThemeNames,
					function(value)
						themeList = Themes[value]
						for I,V in pairs(Objects) do
							if type(V) == "string" then
								I[V] = themeList.buttonColor
							elseif V then
								I.BackgroundColor3 = themeList.buttonColor
							end
						end
					end
				)
			end
            return Elements
        end
        return Section
    end
    return Tabs
end

function UI:Delete()
    if game.CoreGui:FindFirstChild("Acent Hub") ~= nil then
        game.CoreGui:FindFirstChild("Acent Hub"):Destroy()
    end
end

return UI
